# Configurações do servidor MCP-TESS
MCP_TESS_HOST=http://localhost:3001

# Configurações do CrewAI
LLM_PROVIDER=openai
OPENAI_API_KEY=sk-your-openai-api-key
OPENAI_MODEL=gpt-4o
TEMPERATURE=0.7

# Configurações para debug
DEBUG=false

# Configuração do provedor de LLM (openai ou arcee)
TESS_CREW_PROVIDER=openai

# Configurações OpenAI
OPENAI_API_KEY=sua_chave_api_openai
OPENAI_MODEL=gpt-4o
OPENAI_TEMPERATURE=0.7

# Configurações Arcee (caso use Arcee como provedor)
ARCEE_API_KEY=sua_chave_api_arcee
ARCEE_MODEL=claude-3-haiku
ARCEE_TEMPERATURE=0.7

# URL do servidor MCP-TESS
MCP_SERVER_URL=http://localhost:3001

# URLs dos servidores (para seleção na interface)
MCP_LOCAL_SERVER_URL=http://localhost:3001
MCP_PROD_SERVER_URL=http://prod-mcp-tess:3001
# Para usar um IP real, substitua por algo como: http://192.168.1.100:3001 

# Ordem de prioridade dos provedores: TESS > Arcee > OpenAI
# Configuração do TESS (prioridade 1)
TESS_API_KEY=your-tess-api-key
TESS_API_URL=https://tess.pareto.io/api
TESS_AGENT_ID=1234  # Substitua pelo ID correto do seu agente

# Configuração do Arcee (fallback 1)
# Você pode usar a API key do Arcee ou apenas ter a CLI instalada
ARCEE_API_KEY=your-arcee-api-key
ARCEE_MODEL=auto
# A CLI do Arcee será usada automaticamente se estiver instalada

# Configuração do OpenAI (fallback 2)
OPENAI_API_KEY=sk-your-openai-api-key
OPENAI_MODEL=gpt-4o
TEMPERATURE=0.7 
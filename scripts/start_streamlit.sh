#!/bin/bash
# Script para iniciar a aplica√ß√£o Streamlit do Crew Integration
# Autor: Arcee CLI Agentes Tess
# Data: $(date +%d/%m/%Y)

# Cores para sa√≠da
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Iniciando aplica√ß√£o Streamlit do Crew Integration...${NC}"

# Diret√≥rio da aplica√ß√£o
APP_DIR="/Users/agents/Desktop/crew_ai_tess_pareto/mcp-server-tess-xtp/crew-integration"

# Verifica se o diret√≥rio existe
if [ ! -d "$APP_DIR" ]; then
    echo -e "${RED}‚ùå Erro: Diret√≥rio $APP_DIR n√£o encontrado!${NC}"
    exit 1
fi

# Navega para o diret√≥rio e inicia a aplica√ß√£o
cd "$APP_DIR"
echo -e "${BLUE}üìÇ Diret√≥rio: $(pwd)${NC}"

# Verifica se o ambiente virtual existe e ativa-o
if [ -d "venv" ]; then
    echo -e "${BLUE}üîÑ Ativando ambiente virtual...${NC}"
    source venv/bin/activate
else
    echo -e "${BLUE}‚ö†Ô∏è Ambiente virtual n√£o encontrado. Criando...${NC}"
    python -m venv venv
    source venv/bin/activate
    
    echo -e "${BLUE}üì¶ Instalando depend√™ncias...${NC}"
    pip install -r requirements.txt
fi

# Verifica se a CLI Arcee est√° instalada
if ! command -v arcee &> /dev/null; then
    echo -e "${BLUE}‚ö†Ô∏è CLI Arcee n√£o encontrada. Instalando...${NC}"
    pip install arcee-cli
fi

# Criar arquivo .env se n√£o existir
if [ ! -f ".env" ]; then
    echo -e "${BLUE}üìÑ Criando arquivo .env a partir do exemplo...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ Arquivo .env criado. Por favor, edite-o com suas chaves de API.${NC}"
fi

# Verificar se o servidor MCP est√° em execu√ß√£o
echo -e "${BLUE}üîç Verificando se o servidor MCP-TESS est√° em execu√ß√£o...${NC}"
curl -s http://localhost:3001/health > /dev/null
if [ $? -ne 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è Servidor MCP-TESS n√£o detectado. Iniciando automaticamente...${NC}"
    
    # Obter o caminho do script iniciar_tess_mcp_prod.sh
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
    
    # Verifica se o script existe
    if [ -f "$PROJECT_ROOT/scripts/iniciar_tess_mcp_prod.sh" ]; then
        # Inicia o servidor em segundo plano
        bash "$PROJECT_ROOT/scripts/iniciar_tess_mcp_prod.sh" &
        
        # Aguarda 5 segundos para o servidor iniciar
        echo -e "${YELLOW}Aguardando o servidor iniciar (5 segundos)...${NC}"
        sleep 5
        
        # Verifica novamente se o servidor est√° funcionando
        curl -s http://localhost:3001/health > /dev/null
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úÖ Servidor MCP-TESS iniciado com sucesso!${NC}"
        else
            echo -e "${RED}‚ö†Ô∏è N√£o foi poss√≠vel iniciar o servidor MCP-TESS.${NC}"
            echo -e "${YELLOW}Tentando continuar mesmo assim...${NC}"
        fi
    else
        echo -e "${RED}‚ùå Script de in√≠cio do servidor n√£o encontrado.${NC}"
        echo -e "${YELLOW}Caminho buscado: $PROJECT_ROOT/scripts/iniciar_tess_mcp_prod.sh${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Servidor MCP-TESS detectado na porta 3001.${NC}"
fi

echo -e "${BLUE}üîÑ Iniciando Streamlit...${NC}"
python -m streamlit run app.py

# Este c√≥digo abaixo s√≥ ser√° executado se o Streamlit for interrompido
echo -e "${RED}‚ö†Ô∏è Aplica√ß√£o Streamlit foi encerrada.${NC}"

# Desativa o ambiente virtual
deactivate 